version: "3"
volumes:
  postgres_data: {}
  postgres_roads_example: {}
  redis_data: {}

networks:
  core:
    driver: bridge

services:
  dj:
    container_name: dj
    stdin_open: true
    tty: true
    networks:
      - core
    environment:
      - DOTENV_FILE=.docker-env/.env
    build: .
    volumes:
      - .:/code
    ports:
      - "8000:8000"
      - "8001:8001"
    depends_on:
      - db_migration
      - postgres_examples
    command: "/bin/sh /code/docker-dj-jupyter.sh"

  db_migration:
    container_name: db_migration
    networks:
      - core
    environment:
      - DOTENV_FILE=.docker-env/.env
    build: .
    volumes:
      - .:/code
    command: alembic upgrade head
    restart: on-failure

  postgres_examples:
    container_name: postgres_examples
    networks:
      - core
    image: postgres:latest
    volumes:
      - ./examples/docker/postgres_init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres_data:/var/lib/postgresql/data
      # dbt
      - ./examples/dbt/postgres_init.sql:/docker-entrypoint-initdb.d/init_dbt.sql
      - ./examples/dbt:/docker-entrypoint-dbt
    environment:
      - POSTGRES_PASSWORD=FoolishPassword
      - POSTGRES_USER=username
      - POSTGRES_DB=examples
    ports:
      - "5433:5432"

  postgres_roads:
    container_name: postgres_roads
    networks:
      - core
    image: postgres:latest
    volumes:
      - ./examples/docker/postgres_init.roads.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres_roads_example:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=dj
      - POSTGRES_USER=dj
      - POSTGRES_DB=roads
    ports:
      - "5435:5432"
